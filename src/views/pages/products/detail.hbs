{{>header}}

<h1>{{product.name}}</h1>
<ul>
  <li>Categoría: {{product.category}}</li>
  <li>Precio: ${{product.price}}</li>
  <li>Stock: {{product.stock}}</li>
</ul>

<hr>

<h3>Editar producto</h3>
<form id="editForm">
  <div>
    <label>Nombre</label>
    <input type="text" name="name" value="{{product.name}}" required />
  </div>
  <div>
    <label>Precio</label>
    <input type="number" name="price" value="{{product.price}}" required />
  </div>
  <div>
    <label>Categoría</label>
    <input type="text" name="category" value="{{product.category}}" required />
  </div>
  <div>
    <label>Stock</label>
    <input type="number" name="stock" value="{{product.stock}}" required />
  </div>
  <button type="submit">Guardar cambios</button>
</form>

<hr>

<h3>Agregar al carrito</h3>
<form id="addForm">
  <input type="number" name="quantity" value="1" min="1">
  <button type="submit">Agregar al carrito</button>
</form>

{{> footer}}

<script>
  async function ensureCartId() {
    const r = await fetch('/carts/current/id')
    const data = await r.json()
    if (data?.status === 'success') {
      return data.cartId
    }
    throw new Error('No se pudo obtener cartId')
  }

  document.getElementById('addForm').addEventListener('submit', async (e) => {
    e.preventDefault()
    const qty = Number(new FormData(e.currentTarget).get('quantity') || 1)
    const cid = await ensureCartId()
    const pid = '{{product._id}}'
    const res = await fetch(`/api/carts/${cid}/products/${pid}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ quantity: qty })
    })
    if (!res.ok) {
      return alert('Error agregando')
    }
    alert('Agregado al carrito')
  })

  document.getElementById('editForm').addEventListener('submit', async (e) => {
    e.preventDefault()
    const fd = new FormData(e.currentTarget)
    const body = Object.fromEntries(fd.entries())
    body.price = Number(body.price)
    body.stock = Number(body.stock)

    const res = await fetch('/api/products/{{product._id}}', {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(body)
    })

    if (!res.ok) {
      const msg = await res.text()
      alert('Error al actualizar: ' + msg)
      return
    }

    alert('Producto actualizado')
    location.reload()
  })
</script>

<style>
  body {
    font-family: Arial, sans-serif;
    background: #f8f8f8;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  h1, h3 {
    text-align: center;
    margin: 16px 0;
  }

  ul {
    list-style: none;
    padding: 0;
    margin: 0 0 16px;
    text-align: center;
  }

  ul li {
    margin: 4px 0;
  }

  form {
    background: #fff;
    padding: 16px;
    margin: 12px 0;
    border-radius: 8px;
    box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    max-width: 400px;
    width: 100%;
  }

  form div {
    margin-bottom: 12px;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }

  form label {
    font-size: 14px;
    margin-bottom: 4px;
    color: #333;
  }

  form input {
    padding: 8px;
    width: 100%;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 14px;
  }

  form button {
    background: #007bff;
    color: white;
    border: none;
    padding: 10px 16px;
    border-radius: 4px;
    font-size: 14px;
    cursor: pointer;
    transition: background 0.2s;
  }

  form button:hover {
    background: #0056b3;
  }
</style>
